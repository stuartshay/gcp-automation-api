{
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "RESTful API for automating Google Cloud Platform resource management",
    "title": "GCP Automation API",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "name": "API Support",
      "url": "http://www.swagger.io/support",
      "email": "support@swagger.io"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "1.0"
  },
  "host": "localhost:8080",
  "basePath": "/api/v1",
  "paths": {
    "/api/v1/cloudrun/logging/configure": {
      "post": {
        "description": "Configure logging settings for a Cloud Run service including log level, retention, exports, metrics, and alerts",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "cloudrun"
        ],
        "summary": "Configure Cloud Run logging",
        "parameters": [
          {
            "description": "Logging configuration request",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.CloudRunLoggingConfigRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.CloudRunLoggingConfigResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.ErrorResponse"
            }
          }
        }
      }
    },
    "/api/v1/cloudrun/logging/{serviceName}/{region}": {
      "get": {
        "description": "Retrieve the current logging configuration for a Cloud Run service",
        "produces": [
          "application/json"
        ],
        "tags": [
          "cloudrun"
        ],
        "summary": "Get Cloud Run logging configuration",
        "parameters": [
          {
            "type": "string",
            "description": "Cloud Run service name",
            "name": "serviceName",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Cloud Run service region",
            "name": "region",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.CloudRunLoggingConfigResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "description": "Update the logging configuration for a Cloud Run service",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "cloudrun"
        ],
        "summary": "Update Cloud Run logging configuration",
        "parameters": [
          {
            "type": "string",
            "description": "Cloud Run service name",
            "name": "serviceName",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Cloud Run service region",
            "name": "region",
            "in": "path",
            "required": true
          },
          {
            "description": "Logging configuration update request",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.CloudRunLoggingConfigUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.CloudRunLoggingConfigResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.ErrorResponse"
            }
          }
        }
      }
    },
    "/api/v1/cloudrun/logs/{serviceName}/{region}": {
      "get": {
        "description": "Retrieve logs for a Cloud Run service with optional filtering and pagination",
        "produces": [
          "application/json"
        ],
        "tags": [
          "cloudrun"
        ],
        "summary": "Get Cloud Run logs",
        "parameters": [
          {
            "type": "string",
            "description": "Cloud Run service name",
            "name": "serviceName",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Cloud Run service region",
            "name": "region",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Start time for logs (RFC3339 format)",
            "name": "startTime",
            "in": "query"
          },
          {
            "type": "string",
            "description": "End time for logs (RFC3339 format)",
            "name": "endTime",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Additional log filter",
            "name": "filter",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Number of logs to return (default: 100, max: 1000)",
            "name": "pageSize",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.CloudRunLogsResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.ErrorResponse"
            }
          }
        }
      }
    },
    "/api/v1/cloudrun/service/{serviceName}/{region}": {
      "get": {
        "description": "Retrieve detailed information about a Cloud Run service",
        "produces": [
          "application/json"
        ],
        "tags": [
          "cloudrun"
        ],
        "summary": "Get Cloud Run service information",
        "parameters": [
          {
            "type": "string",
            "description": "Cloud Run service name",
            "name": "serviceName",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Cloud Run service region",
            "name": "region",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.CloudRunServiceInfo"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.ErrorResponse"
            }
          }
        }
      }
    },
    "/buckets": {
      "post": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "description": "Create a new Google Cloud Storage bucket with the specified parameters including advanced options for KMS encryption, retention policies, and access controls\n\n## Example Usage:\n### Basic Example (models.BasicBucketRequest):\nSimple bucket creation with minimal required fields\n### Advanced Example (models.AdvancedBucketRequest):\nEnterprise bucket with security features, labels, and compliance settings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Buckets"
        ],
        "summary": "Create a new Cloud Storage bucket",
        "parameters": [
          {
            "description": "Bucket creation request",
            "name": "bucket",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.BucketRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.SuccessResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.BucketResponse"
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.ErrorResponse"
            }
          }
        }
      }
    },
    "/buckets/{name}": {
      "get": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "description": "Retrieve details of a Google Cloud Storage bucket by its bucket name",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Buckets"
        ],
        "summary": "Get a Cloud Storage bucket by name",
        "parameters": [
          {
            "type": "string",
            "description": "Bucket name",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.SuccessResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.BucketResponse"
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "description": "Delete a Google Cloud Storage bucket by its bucket name",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Buckets"
        ],
        "summary": "Delete a Cloud Storage bucket",
        "parameters": [
          {
            "type": "string",
            "description": "Bucket name",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.SuccessResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.ErrorResponse"
            }
          }
        }
      }
    },
    "/folders": {
      "post": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "description": "Create a new Google Cloud Platform folder with the specified parameters\n\n## Example Usage:\n### Basic Example (models.BasicFolderRequest):\nSimple folder under organization root\n### Advanced Example (models.AdvancedFolderRequest):\nNested folder structure for complex hierarchies",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Folders"
        ],
        "summary": "Create a new GCP folder",
        "parameters": [
          {
            "description": "Folder creation request",
            "name": "folder",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.FolderRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.SuccessResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.FolderResponse"
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.ErrorResponse"
            }
          }
        }
      }
    },
    "/folders/{id}": {
      "get": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "description": "Retrieve details of a Google Cloud Platform folder by its folder ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Folders"
        ],
        "summary": "Get a GCP folder by ID",
        "parameters": [
          {
            "type": "string",
            "description": "Folder ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.SuccessResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.FolderResponse"
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "description": "Delete a Google Cloud Platform folder by its folder ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Folders"
        ],
        "summary": "Delete a GCP folder",
        "parameters": [
          {
            "type": "string",
            "description": "Folder ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.SuccessResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.ErrorResponse"
            }
          }
        }
      }
    },
    "/projects": {
      "post": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "description": "Create a new Google Cloud Platform project with the specified parameters\n\n## Example Usage:\n### Basic Example (models.BasicProjectRequest):\nSimple project creation with just ID and display name\n### Advanced Example (models.AdvancedProjectRequest):\nEnterprise project with organization hierarchy, labels, and governance",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Projects"
        ],
        "summary": "Create a new GCP project",
        "parameters": [
          {
            "description": "Project creation request",
            "name": "project",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.ProjectRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.SuccessResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.ProjectResponse"
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.ErrorResponse"
            }
          }
        }
      }
    },
    "/projects/{id}": {
      "get": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "description": "Retrieve details of a Google Cloud Platform project by its project ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Projects"
        ],
        "summary": "Get a GCP project by ID",
        "parameters": [
          {
            "type": "string",
            "description": "Project ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.SuccessResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.ProjectResponse"
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "description": "Delete a Google Cloud Platform project by its project ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Projects"
        ],
        "summary": "Delete a GCP project",
        "parameters": [
          {
            "type": "string",
            "description": "Project ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.SuccessResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "github_com_stuartshay_gcp-automation-api_internal_models.BucketRequest": {
      "type": "object",
      "required": [
        "location",
        "name"
      ],
      "properties": {
        "kms_key_name": {
          "description": "Phase 1 Advanced Options - Security & Compliance",
          "type": "string",
          "example": "projects/my-project/locations/us-central1/keyRings/my-keyring/cryptoKeys/my-key"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "type": "string",
          "example": "us-central1"
        },
        "name": {
          "type": "string",
          "example": "my-project-storage-bucket"
        },
        "public_access_prevention": {
          "type": "string",
          "enum": [
            "inherited",
            "enforced",
            "unspecified"
          ],
          "example": "enforced"
        },
        "retention_policy": {
          "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.RetentionPolicy"
        },
        "storage_class": {
          "type": "string",
          "enum": [
            "STANDARD",
            "NEARLINE",
            "COLDLINE",
            "ARCHIVE"
          ],
          "example": "STANDARD"
        },
        "uniform_bucket_level_access": {
          "type": "boolean",
          "example": true
        },
        "versioning": {
          "type": "boolean",
          "example": true
        }
      }
    },
    "github_com_stuartshay_gcp-automation-api_internal_models.BucketResponse": {
      "type": "object",
      "properties": {
        "create_time": {
          "type": "string"
        },
        "kms_key_name": {
          "description": "Phase 1 Advanced Options - Security & Compliance",
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "public_access_prevention": {
          "type": "string"
        },
        "retention_policy": {
          "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.RetentionPolicy"
        },
        "self_link": {
          "type": "string"
        },
        "storage_class": {
          "type": "string"
        },
        "uniform_bucket_level_access": {
          "type": "boolean"
        },
        "update_time": {
          "type": "string"
        },
        "versioning": {
          "type": "boolean"
        }
      }
    },
    "github_com_stuartshay_gcp-automation-api_internal_models.CloudRunLoggingConfigRequest": {
      "type": "object",
      "required": [
        "logging_config",
        "region",
        "service_name"
      ],
      "properties": {
        "alerts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.LogAlert"
          }
        },
        "logging_config": {
          "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.LoggingConfig"
        },
        "metrics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.LogMetric"
          }
        },
        "region": {
          "type": "string",
          "example": "us-central1"
        },
        "service_name": {
          "type": "string",
          "example": "my-api-service"
        }
      }
    },
    "github_com_stuartshay_gcp-automation-api_internal_models.CloudRunLoggingConfigResponse": {
      "type": "object",
      "properties": {
        "alerts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.LogAlertResponse"
          }
        },
        "configured_at": {
          "type": "string",
          "example": "2025-09-20T10:00:00Z"
        },
        "logging_config": {
          "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.LoggingConfig"
        },
        "logging_url": {
          "type": "string",
          "example": "https://console.cloud.google.com/logs/query"
        },
        "metrics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.LogMetricResponse"
          }
        },
        "region": {
          "type": "string",
          "example": "us-central1"
        },
        "service_name": {
          "type": "string",
          "example": "my-api-service"
        },
        "status": {
          "type": "string",
          "example": "configured"
        }
      }
    },
    "github_com_stuartshay_gcp-automation-api_internal_models.CloudRunLoggingConfigUpdateRequest": {
      "type": "object",
      "properties": {
        "alerts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.LogAlert"
          }
        },
        "logging_config": {
          "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.LoggingConfig"
        },
        "metrics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.LogMetric"
          }
        }
      }
    },
    "github_com_stuartshay_gcp-automation-api_internal_models.CloudRunLogsResponse": {
      "type": "object",
      "properties": {
        "logs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.LogEntry"
          }
        },
        "next_page_token": {
          "type": "string",
          "example": "abc123"
        },
        "region": {
          "type": "string",
          "example": "us-central1"
        },
        "service_name": {
          "type": "string",
          "example": "my-api-service"
        },
        "total_count": {
          "type": "integer",
          "example": 150
        }
      }
    },
    "github_com_stuartshay_gcp-automation-api_internal_models.CloudRunServiceInfo": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "example": "2025-09-20T09:00:00Z"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "region": {
          "type": "string",
          "example": "us-central1"
        },
        "service_name": {
          "type": "string",
          "example": "my-api-service"
        },
        "status": {
          "type": "string",
          "example": "READY"
        },
        "updated_at": {
          "type": "string",
          "example": "2025-09-20T10:00:00Z"
        },
        "url": {
          "type": "string",
          "example": "https://my-api-service-hash-uc.a.run.app"
        }
      }
    },
    "github_com_stuartshay_gcp-automation-api_internal_models.ErrorResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer"
        },
        "error": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "github_com_stuartshay_gcp-automation-api_internal_models.ExportDestination": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "bucket": {
          "type": "string",
          "example": "logs-bucket"
        },
        "dataset": {
          "type": "string",
          "example": "logs_dataset"
        },
        "filter": {
          "type": "string",
          "example": "severity >= WARNING"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "example": {
            "environment": "production"
          }
        },
        "table": {
          "type": "string",
          "example": "cloudrun_logs"
        },
        "topic": {
          "type": "string",
          "example": "projects/my-project/topics/logs"
        },
        "type": {
          "type": "string",
          "example": "bigquery"
        }
      }
    },
    "github_com_stuartshay_gcp-automation-api_internal_models.FolderRequest": {
      "type": "object",
      "required": [
        "display_name",
        "parent_id",
        "parent_type"
      ],
      "properties": {
        "display_name": {
          "type": "string",
          "maxLength": 100,
          "minLength": 1,
          "example": "Development Environment"
        },
        "parent_id": {
          "type": "string",
          "example": "123456789012"
        },
        "parent_type": {
          "description": "\"organization\" or \"folder\"",
          "type": "string",
          "enum": [
            "organization",
            "folder"
          ],
          "example": "organization"
        }
      }
    },
    "github_com_stuartshay_gcp-automation-api_internal_models.FolderResponse": {
      "type": "object",
      "properties": {
        "create_time": {
          "type": "string"
        },
        "display_name": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "parent_id": {
          "type": "string"
        },
        "parent_type": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "update_time": {
          "type": "string"
        }
      }
    },
    "github_com_stuartshay_gcp-automation-api_internal_models.HTTPRequest": {
      "type": "object",
      "properties": {
        "latency": {
          "type": "string",
          "example": "0.123s"
        },
        "remote_ip": {
          "type": "string",
          "example": "203.0.113.1"
        },
        "request_method": {
          "type": "string",
          "example": "GET"
        },
        "request_url": {
          "type": "string",
          "example": "/api/v1/health"
        },
        "response_size": {
          "type": "integer",
          "example": 1024
        },
        "status": {
          "type": "integer",
          "example": 200
        },
        "user_agent": {
          "type": "string",
          "example": "curl/7.68.0"
        }
      }
    },
    "github_com_stuartshay_gcp-automation-api_internal_models.LogAlert": {
      "type": "object",
      "required": [
        "condition",
        "name"
      ],
      "properties": {
        "condition": {
          "type": "string",
          "example": "error_rate > 0.05"
        },
        "description": {
          "type": "string",
          "example": "Alert when error rate exceeds threshold"
        },
        "enabled": {
          "type": "boolean",
          "example": true
        },
        "name": {
          "type": "string",
          "example": "high_error_rate"
        },
        "notification_channels": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "projects/my-project/notificationChannels/12345"
          ]
        }
      }
    },
    "github_com_stuartshay_gcp-automation-api_internal_models.LogAlertResponse": {
      "type": "object",
      "properties": {
        "alert_url": {
          "type": "string",
          "example": "https://console.cloud.google.com/monitoring/alerting"
        },
        "condition": {
          "type": "string",
          "example": "error_rate > 0.05"
        },
        "created_at": {
          "type": "string",
          "example": "2025-09-20T10:00:00Z"
        },
        "description": {
          "type": "string",
          "example": "Alert when error rate exceeds threshold"
        },
        "enabled": {
          "type": "boolean",
          "example": true
        },
        "name": {
          "type": "string",
          "example": "high_error_rate"
        },
        "notification_channels": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "github_com_stuartshay_gcp-automation-api_internal_models.LogEntry": {
      "type": "object",
      "properties": {
        "http_request": {
          "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.HTTPRequest"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "message": {
          "type": "string",
          "example": "Request processed successfully"
        },
        "resource": {
          "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.LogResource"
        },
        "severity": {
          "type": "string",
          "example": "INFO"
        },
        "source_file": {
          "type": "string",
          "example": "main.go"
        },
        "source_line": {
          "type": "integer",
          "example": 42
        },
        "timestamp": {
          "type": "string",
          "example": "2025-09-20T10:00:00Z"
        },
        "trace_id": {
          "type": "string",
          "example": "projects/my-project/traces/12345"
        }
      }
    },
    "github_com_stuartshay_gcp-automation-api_internal_models.LogMetric": {
      "type": "object",
      "required": [
        "filter",
        "name"
      ],
      "properties": {
        "description": {
          "type": "string",
          "example": "Rate of error logs"
        },
        "filter": {
          "type": "string",
          "example": "severity >= ERROR"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "example": {
            "service": "api"
          }
        },
        "name": {
          "type": "string",
          "example": "error_rate"
        },
        "type": {
          "type": "string",
          "example": "counter"
        }
      }
    },
    "github_com_stuartshay_gcp-automation-api_internal_models.LogMetricResponse": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "example": "2025-09-20T10:00:00Z"
        },
        "description": {
          "type": "string",
          "example": "Rate of error logs"
        },
        "filter": {
          "type": "string",
          "example": "severity >= ERROR"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "metric_url": {
          "type": "string",
          "example": "https://console.cloud.google.com/monitoring/metrics-explorer"
        },
        "name": {
          "type": "string",
          "example": "error_rate"
        },
        "type": {
          "type": "string",
          "example": "counter"
        }
      }
    },
    "github_com_stuartshay_gcp-automation-api_internal_models.LogResource": {
      "type": "object",
      "properties": {
        "configuration_name": {
          "type": "string",
          "example": "my-api-service"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "type": "string",
          "example": "us-central1"
        },
        "revision_name": {
          "type": "string",
          "example": "my-api-service-00001"
        },
        "service_name": {
          "type": "string",
          "example": "my-api-service"
        },
        "type": {
          "type": "string",
          "example": "cloud_run_revision"
        }
      }
    },
    "github_com_stuartshay_gcp-automation-api_internal_models.LoggingConfig": {
      "type": "object",
      "properties": {
        "custom_fields": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "example": {
            "environment": "production",
            "team": "backend"
          }
        },
        "export_destinations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/github_com_stuartshay_gcp-automation-api_internal_models.ExportDestination"
          }
        },
        "log_level": {
          "type": "string",
          "example": "INFO"
        },
        "retention_days": {
          "type": "integer",
          "example": 30
        },
        "sampling_rate": {
          "type": "number",
          "example": 0.1
        },
        "structured_logging": {
          "type": "boolean",
          "example": true
        }
      }
    },
    "github_com_stuartshay_gcp-automation-api_internal_models.ProjectRequest": {
      "type": "object",
      "required": [
        "display_name",
        "project_id"
      ],
      "properties": {
        "display_name": {
          "type": "string",
          "maxLength": 100,
          "minLength": 1,
          "example": "My Development Project"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "parent_id": {
          "type": "string",
          "example": "123456789012"
        },
        "parent_type": {
          "description": "\"organization\" or \"folder\"",
          "type": "string",
          "enum": [
            "organization",
            "folder"
          ],
          "example": "organization"
        },
        "project_id": {
          "type": "string",
          "example": "my-dev-project-2024"
        }
      }
    },
    "github_com_stuartshay_gcp-automation-api_internal_models.ProjectResponse": {
      "type": "object",
      "properties": {
        "create_time": {
          "type": "string"
        },
        "display_name": {
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "parent_id": {
          "type": "string"
        },
        "parent_type": {
          "type": "string"
        },
        "project_id": {
          "type": "string"
        },
        "project_number": {
          "type": "integer"
        },
        "state": {
          "type": "string"
        },
        "update_time": {
          "type": "string"
        }
      }
    },
    "github_com_stuartshay_gcp-automation-api_internal_models.RetentionPolicy": {
      "type": "object",
      "properties": {
        "is_locked": {
          "type": "boolean",
          "example": false
        },
        "retention_period_seconds": {
          "description": "1 second to 100 years",
          "type": "integer",
          "maximum": 3155760000,
          "minimum": 1,
          "example": 86400
        }
      }
    },
    "github_com_stuartshay_gcp-automation-api_internal_models.SuccessResponse": {
      "type": "object",
      "properties": {
        "data": {},
        "message": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "BearerAuth": {
      "description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}
